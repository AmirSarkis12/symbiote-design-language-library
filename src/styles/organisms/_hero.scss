.hero {
    position: relative;

    .hero-background {
        object-fit: cover;
        width: 100%;
        height: 17rem;

        @include media-breakpoint-up(sm) {
            height: 21rem;
        }

        @include media-breakpoint-up(md) {
            height: 25em;
        }

        @include media-breakpoint-up(lg) {
            height: 27rem;
        }
    }

    .content {
        position: absolute;
        left: 5%;
        transform: translate(0%, -50%);
        top: 50%;
        padding: 1rem;
        border-radius: 0.25rem;
        overflow: hidden;
        background-color: $white;
        margin: auto;

        @include general-shadow();

        @include media-breakpoint-up(md) {
            padding: 1.5rem;
        }

        &.center {
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
        }

        &.right {
            left: unset;
            right: 5%;
            transform: translate(0%, -50%);
        }
    }
}

.hero-fluid {
    position: absolute;
    top: 50%;
    left: 0;
    transform: translate(0, -50%);
    display: flex;
    justify-content: flex-start;

    // Below calculations are to match the existing column alignment even though this container is set to position: absolute;
    @include media-breakpoint-up(sm) {
        left: calc((100vw - (#{$grid-breakpoints(sm)} + #{$grid-gutter-width})) / 2);
    }

    @include media-breakpoint-up(md) {
        left: calc((100vw - (#{$grid-breakpoints(md)} + #{$grid-gutter-width})) / 2);
    }

    @include media-breakpoint-up(lg) {
        left: calc((100vw - (#{$grid-breakpoints(lg)} + #{$grid-gutter-width})) / 2);
    }

    &.center {
        left: 50%;
        transform: translate(-50%, -50%);
        justify-content: center;
        text-align: center;
    }

    &.right {
        right: 0;
        left: unset;
        transform: translate(0, -50%);
        justify-content: flex-end;

        // Below calculations are to match the existing column alignment even though this container is set to position: absolute;
        @include media-breakpoint-up(sm) {
            right: calc((100vw - (#{$grid-breakpoints(sm)} - #{$grid-gutter-width})) / 2);
        }

        @include media-breakpoint-up(md) {
            right: calc((100vw - (#{$grid-breakpoints(md)} - #{$grid-gutter-width})) / 2);
        }

        @include media-breakpoint-up(lg) {
            right: calc((100vw - (#{$grid-breakpoints(lg)} - #{$grid-gutter-width})) / 2);
        }
    }

    .hero-background {
        object-fit: cover;
        width: 100%;
        height: 17rem;

        @include media-breakpoint-up(sm) {
            height: 21rem;
        }

        @include media-breakpoint-up(md) {
            height: 25em;
        }

        @include media-breakpoint-up(lg) {
            height: 27rem;
        }
    }

    .content {
        position: unset;
        left: unset;
        top: unset;
        width: unset;
        transform: unset;
    }
}
